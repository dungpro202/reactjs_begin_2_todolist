{"version":3,"sources":["components/TaskForm.js","components/TaskSearch.js","components/TaskSort.js","components/TaskControl.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","useState","id","name","status","jobs","setJobs","useEffect","task","console","log","onCloseForm","onSendCloseForm","onChange","event","target","value","onClear","className","onClick","onSubmit","preventDefault","onHandleSubmit","type","required","TaskSearch","keyword","setKeywords","placeholder","e","onSearch","TaskSort","by","sort","setSort","onClickSort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","role","TaskItem","index","onUpdateStatus","onUpdate","onDelete","TaskList","filterName","filterStatus","filter","setFilter","onFilter","elmTasks","tasks","map","App","setTask","taskedSearch","setTaskedSearch","isDisplayfrom","setIsDisplay","taskEditing","setTaskEditing","setKeyword","localStorage","getItem","JSON","parse","alert","s4","Math","floor","random","toString","substring","guid","findIndex","result","forEach","yyy","toLowerCase","indexOf","a","b","elmTasksForm","dataform","tasks_temp","push","setItem","stringify","def_tasks","TaskControl","objA","objB","aProps","Object","getOwnPropertyNames","bProps","length","i","propName","isEqual","splice","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAyGeA,MAvGf,SAAkBC,GAEd,MAAwBC,mBAAS,CAC7BC,GAAI,GACJC,KAAM,GACNC,QAAQ,IAHZ,mBAAOC,EAAP,KAAaC,EAAb,KAMAC,qBAAU,WAEFP,EAAMQ,MACNF,EAAQ,CACJJ,GAAIF,EAAMQ,KAAKN,GACfC,KAAMH,EAAMQ,KAAKL,KACjBC,OAAQJ,EAAMQ,KAAKJ,SAEvBK,QAAQC,IAAI,SACJV,EAAMQ,MACdF,EAAQ,CACJJ,GAAI,GACJC,KAAM,GACNC,QAAQ,MAIjB,CAACJ,EAAMQ,OAGV,IAAMG,EAAc,WAChBX,EAAMY,mBAGJC,EAAW,SAACC,GACd,IAAIC,EAASD,EAAMC,OACfZ,EAAOY,EAAOZ,KACda,EAAQD,EAAOC,MACN,WAATb,IACAa,EAAyB,SAAjBD,EAAOC,OAGnBV,EAAQ,2BAAKD,GAAN,kBAAaF,EAAOa,MAUzBC,EAAU,WACZX,EAAQ,CAAEH,KAAM,GAAIC,OAAQ,MAIhC,OACI,sBAAKc,UAAU,sBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,cAAd,UACI,sBACIA,UAAU,iCACVC,QAASR,IACQ,KAAZN,EAAKH,GAAY,4BAAmB,4CAErD,qBAAKgB,UAAU,aAAf,SACI,uBAAME,SAtBK,SAACN,GACpBA,EAAMO,iBACNrB,EAAMsB,eAAejB,GACrBY,IACAN,KAkBQ,UACI,sBAAKO,UAAU,aAAf,UACI,6CACA,uBACIK,KAAK,OACLL,UAAU,eACVf,KAAK,OACLa,MAAOX,EAAKF,KACZU,SAAUA,OAGlB,yDACA,yBACIK,UAAU,eACVM,SAAS,WACTrB,KAAK,SACLa,MAAOX,EAAKD,OACZS,SAAUA,EALd,UAOI,wBAAQG,OAAO,EAAf,+BACA,wBAAQA,OAAO,EAAf,wBAEJ,uBACA,sBAAKE,UAAU,cAAf,UACI,wBAAQK,KAAK,SAASL,UAAU,kBAAhC,qBADJ,OAEI,wBACIK,KAAK,SACLL,UAAU,iBACVC,QAASF,EAHb,0CChDTQ,MA1Cf,SAAoBzB,GAGhB,MAA+BC,mBAAS,IAAxC,mBAAOyB,EAAP,KAAgBC,EAAhB,KAYA,OACI,qBAAKT,UAAU,sCAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBACIK,KAAK,OACLL,UAAU,eACVU,YAAY,+BACZzB,KAAK,UACLa,MAAOU,EACPb,SAnBD,SAACgB,GACZ,IACIb,EADSa,EAAEd,OACIC,MACnBW,EAAYX,MAmBJ,sBAAME,UAAU,kBAAhB,SACI,yBACAA,UAAU,kBACVK,KAAK,SACLJ,QAnBD,WACXnB,EAAM8B,SAASJ,IAeH,UAMI,sBAAMR,UAAU,sBANpB,oBC8CLa,MA1Ef,SAAkB/B,GAEd,MAAwBC,mBAAS,CAC7B+B,GAAI,OACJhB,MAAO,IAFX,mBAAOiB,EAAP,KAAaC,EAAb,KAUMC,EAAc,SAACC,EAAQC,GACzBH,EAAQ,CACJF,GAAII,EACJpB,MAAOqB,IAEXrC,EAAMsC,OAAOF,EAAOC,IAExB,OAEI,qBAAKnB,UAAU,sCAAf,SACI,sBAAKA,UAAU,WAAf,UACI,yBAAQA,UAAU,kCAAkCK,KAAK,SAASrB,GAAG,gBAAgBqC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,OAA/I,+BACY,sBAAMvB,UAAU,uBAE5B,qBAAIA,UAAU,gBAAgBwB,kBAAgB,gBAA9C,UACI,oBACIvB,QAAS,kBAAMgB,EAAY,OAAQ,IADvC,SAGI,mBAAGQ,KAAK,KAAKC,KAAK,SACd1B,UAAuB,SAAZe,EAAKD,GAA+B,IAAfC,EAAKjB,MAAc,gBAAkB,GADzE,SAEI,sBAAME,UAAU,4BAAhB,4BAKR,oBACIC,QAAS,kBAAMgB,EAAY,QAAS,IADxC,SAII,mBAAGQ,KAAK,KAAKC,KAAK,SACd1B,UAAuB,SAAZe,EAAKD,IAAgC,IAAhBC,EAAKjB,MAAe,gBAAkB,GAD1E,SAII,sBAAME,UAAU,4BAAhB,4BAKR,oBAAI0B,KAAK,YAAY1B,UAAU,YAC/B,oBACIC,QAAS,kBAAMgB,EAAY,SAAU,IADzC,SAGI,mBAAGQ,KAAK,KAAKC,KAAK,SACd1B,UAAuB,WAAZe,EAAKD,GAAiC,IAAfC,EAAKjB,MAAc,gBAAkB,GAD3E,oDAKJ,oBACIG,QAAS,kBAAMgB,EAAY,UAAW,IAD1C,SAGI,mBAAGQ,KAAK,KAAKC,KAAK,SACd1B,UAAuB,WAAZe,EAAKD,IAAkC,IAAhBC,EAAKjB,MAAe,gBAAkB,GAD5E,mDChDTjB,MAZf,SAAkBC,GAEd,OACI,sBAAKkB,UAAU,YAAf,UAEG,cAAC,EAAD,CAAYY,SAAU9B,EAAM8B,WAE3B,cAAC,EAAD,CAAUQ,OAAQtC,EAAMsC,aC8BrBO,MAxCf,SAAkB7C,GAEd,IAAMQ,EAAgBR,EAAhBQ,KAAMsC,EAAU9C,EAAV8C,MAcZ,OACI,+BACI,6BAAKA,EAAQ,IACb,6BAAKtC,EAAKL,OACV,oBAAIe,UAAU,cAAd,SACI,sBACIA,WAA2B,IAAhBV,EAAKJ,OAAkB,sBAAwB,qBAC1De,QAnBO,WACnBnB,EAAM+C,eAAevC,EAAKN,KAgBlB,UAGqB,IAAhBM,EAAKJ,OAAkB,oBAAc,cAG9C,qBAAIc,UAAU,cAAd,UACI,yBAAQK,KAAK,SAASL,UAAU,kBAAkBC,QAhB9C,WACZnB,EAAMgD,SAASxC,EAAKN,KAeZ,UACI,sBAAMgB,UAAU,sBADpB,cADJ,OAKI,yBAAQK,KAAK,SAASL,UAAU,iBAAiBC,QAxB5C,WACbnB,EAAMiD,SAASzC,EAAKN,KAuBZ,UACI,sBAAMgB,UAAU,qBADpB,mBC6DDgC,MA3Ff,SAAkBlD,GAGd,MAA4BC,mBACxB,CACIkD,WAAY,GACZC,cAAe,IAHvB,mBAAOC,EAAP,KAAeC,EAAf,KASMzC,EAAS,SAACgB,GACZ,IAAId,EAASc,EAAEd,OACXZ,EAAOY,EAAOZ,KACda,EAAQD,EAAOC,MACnBhB,EAAMuD,SACK,eAAPpD,EAAoBa,EAAMqC,EAAOF,WAC1B,iBAAPhD,EAAsBa,EAAMqC,EAAOD,cAEvCE,EAAU,2BAAKD,GAAN,kBAAelD,EAAOa,MAkB/BwC,EAAWxD,EAAMyD,MAAMC,KAAI,SAAClD,EAAMsC,GAClC,OAAO,cAAC,EAAD,CAEHA,MAAOA,EACPtC,KAAMA,EACNuC,eAAgB/C,EAAM+C,eACtBE,SAAUjD,EAAMiD,SAChBD,SAAUhD,EAAMgD,UALXxC,EAAKN,OAQlB,OACI,wBAAOgB,UAAU,yCAAjB,UACI,gCACI,+BACI,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,gCACA,oBAAIA,UAAU,cAAd,yCAGR,kCACI,+BACI,uBACA,6BACI,uBACIK,KAAK,OACLL,UAAU,eACVf,KAAK,aACLa,MAAOqC,EAAOF,WACdtC,SAAUA,MAGlB,6BACI,yBACIK,UAAU,eACVf,KAAK,eACLa,MAAOqC,EAAOD,aACdvC,SAAUA,EAJd,UAOI,wBAAQG,MAAM,KAAd,8BACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,oCAGR,0BAEHwC,SCyMFG,MA3Rf,WAEI,MAAyB1D,mBAAS,IAAlC,mBAAOwD,EAAP,KAAcG,EAAd,KACA,EAAwC3D,mBAAS,IAAjD,mBAAO4D,EAAP,KAAqBC,EAArB,KACA,EAAsC7D,oBAAS,GAA/C,mBAAO8D,EAAP,KAAsBC,EAAtB,KACA,EAAsC/D,mBAAS,MAA/C,mBAAOgE,EAAP,KAAoBC,EAApB,KACA,EAA4BjE,mBACxB,CACIE,KAAM,GACNC,QAAS,IAHjB,mBAAOiD,EAAP,KAAeC,EAAf,KAMA,EAA8BrD,mBAAS,MAAvC,mBAAOyB,EAAP,KAAgByC,EAAhB,KACA,EAAwBlE,mBAAS,CAC7B+B,GAAI,OACJhB,MAAO,IAFX,mBAAOiB,EAAP,KAAaC,EAAb,KAMA3B,qBAAU,WAEN,GAAI6D,cAAgBA,aAAaC,QAAQ,SAAU,CAE/C,IAAIZ,EAAQa,KAAKC,MAAMH,aAAaC,QAAQ,UAC5CT,EAAQH,QAERe,MAAM,UAGX,IAGH,IAyBMC,EAAK,WACP,OAAOC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAAqBC,SAAS,IAAIC,UAAU,IAGtEC,EAAO,WACT,OAAON,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAOA,IAAOA,KAkB9E9D,EAAc,WAChBqD,GAAa,IAgCXgB,EAAY,SAAC9E,GACf,IAAI+E,GAAU,EAMd,OALAxB,EAAMyB,SAAQ,SAAC1E,EAAMsC,GACbtC,EAAKN,KAAOA,IACZ+E,EAASnC,MAGVmC,GAkCX1E,qBAAU,WACN,IAAI4E,EAAG,YAAO1B,GACVJ,IACIA,EAAOlD,OACPgF,EAAMA,EAAI9B,QAAO,SAAC7C,GACd,OAAyD,IAAlDA,EAAKL,KAAKiF,cAAcC,QAAQhC,EAAOlD,UAGtDgF,EAAMA,EAAI9B,QAAO,SAAC7C,GACd,OAAuB,IAAnB6C,EAAOjD,OACAI,EAEAA,EAAKJ,UAA8B,IAAlBiD,EAAOjD,YAKvCsB,IACJjB,QAAQC,IAAI,OAERyE,EAAMA,EAAI9B,QAAO,SAAC7C,GACd,OAAqD,IAA9CA,EAAKL,KAAKiF,cAAcC,QAAQ3D,OAG/CjB,QAAQC,IAAIyE,GACZrB,EAAgBqB,KACjB,CAAC9B,EAAQI,EAAO/B,IAEN,SAAVO,EAAKD,GACJyB,EAAMxB,MAAK,SAACqD,EAAEC,GACV,OAAGD,EAAEnF,KAAKoF,EAAEpF,KAAa8B,EAAKjB,MACtBsE,EAAEnF,KAAKoF,EAAEpF,MAAc8B,EAAKjB,MACxB,KAGhByC,EAAMxB,MAAK,SAACqD,EAAEC,GACV,OAAGD,EAAElF,OAAOmF,EAAEnF,QAAgB6B,EAAKjB,MAC3BsE,EAAElF,OAAOmF,EAAEnF,OAAe6B,EAAKjB,MAC3B,KAGpBP,QAAQC,IAAI,UA+BZ,IAUI8E,EAAezB,EACb,cAAC,EAAD,CACEzC,eAzJS,SAACmE,GACd,IAAIC,EAAU,YAAOjC,GACD,KAAhBgC,EAASvF,IACTuF,EAASvF,GAAK6E,IACdW,EAAWC,KAAKF,IAGhBC,EADYV,EAAUS,EAASvF,KACXuF,EAExB7B,EAAQ8B,GACRxB,EAAe,MACfE,aAAawB,QAAQ,QAAStB,KAAKuB,UAAUH,KA+IzC9E,gBAAiBD,EACjBH,KAAMyD,IACR,GACN,OAGI,sBAAK/C,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mEACA,0BAEJ,sBAAKA,UAAU,MAAf,UACI,qBAAKA,WAA6B,IAAlB6C,EAAyB,sCAAwC,GAAjF,SAEKyB,IAEL,sBAAKtE,WAA6B,IAAlB6C,EAAyB,sCAAwC,0CAAjF,UACI,yBACIxC,KAAK,SACLL,UAAU,kBACVC,QAlMC,WACb4C,GAAiC,OAAhBE,GACjBD,GAAa,GACbE,EAAe,MACfzD,QAAQC,IAAIuD,KAEZD,GAAcD,GACdG,EAAe,QAwLP,UAKI,sBAAMhD,UAAU,oBALpB,+BADJ,OAQI,wBACIK,KAAK,SACLL,UAAU,iBACVC,QA1OG,WACnB,IAAI2E,EAAY,CACZ,CACI5F,GAAI6E,IACJ5E,KAAM,6BACNC,QAAQ,GAEZ,CACIF,GAAI6E,IACJ5E,KAAM,mBACNC,QAAQ,GAEZ,CACIF,GAAI6E,IACJ5E,KAAM,WACNC,QAAQ,IAGhBwD,EAAQkC,GAGR1B,aAAawB,QAAQ,QAAStB,KAAKuB,UAAUC,KAkNjC,2BAOA,cAACC,EAAD,CAAajE,SA1EZ,SAACJ,GACdjB,QAAQC,IAAIgB,GACZyC,EAAWzC,IAwEkCY,OA5ClC,SAACF,EAAQC,GACpB5B,QAAQC,IAAI0B,EAAQC,GACpBH,EAAQ,CACJF,GAAII,EACJpB,MAAOqB,OA0CC,qBAAKnB,UAAU,YAAf,SACI,qBAAKA,UAAU,0CAAf,SACI,cAAC,EAAD,CAAUuC,MAxElC,SAAiBuC,EAAMC,GAEnB,IAAIC,EAASC,OAAOC,oBAAoBJ,GACpCK,EAASF,OAAOC,oBAAoBH,GAGxC,GAAIC,EAAOI,SAAWD,EAAOC,OACzB,OAAO,EAGX,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOI,OAAQC,IAAK,CACpC,IAAIC,EAAWN,EAAOK,GAGtB,GAAIP,EAAKQ,KAAcP,EAAKO,GACxB,OAAO,EAKf,OAAO,EAoD+BC,CAAQpD,EAAQ,CAAElD,KAAM,GAAIC,QAAS,KAAgB,OAAVsB,EAA8B+B,EAAbI,EAAoBd,eA7KnG,SAAC7C,GACpB,IAAI4C,EAAQkC,EAAU9E,GACtB,IAAe,IAAX4C,EAAc,CACd,IAAI4C,EAAU,YAAOjC,GACrBiC,EAAW5C,GAAO1C,QAAUsF,EAAW5C,GAAO1C,OAC9CwD,EAAQ8B,GACRtB,aAAawB,QAAQ,QAAStB,KAAKuB,UAAUH,MAuKqGzC,SAtJzI,SAAC/C,GACd,IAAI4C,EAAQkC,EAAU9E,GACtB,IAAe,IAAX4C,EAAc,CACd,IAAI4C,EAAU,YAAOjC,GACrBiC,EAAWgB,OAAO5D,EAAO,GACzBc,EAAQ8B,GACRtB,aAAawB,QAAQ,QAAStB,KAAKuB,UAAUH,IAEjD/E,KA8I0KqC,SA1I7J,SAAC9C,GACd,IAAI4C,EAAQkC,EAAU9E,IACP,IAAX4C,GACAoB,EAAeT,EAAMX,IA9DzBkB,GAAa,IAqMiLT,SAjIjL,SAACJ,EAAYC,GAC1BA,EAAeuD,SAASvD,EAAc,IACtCE,EAAU,CACNnD,KAAMgD,EAAWiC,cACjBhF,OAAQgD,qBC/ILwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.acc68ce8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TaskForm(props) {\r\n\r\n    const [jobs, setJobs] = useState({\r\n        id: '',\r\n        name: '',\r\n        status: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.task) {\r\n            setJobs({\r\n                id: props.task.id,\r\n                name: props.task.name,\r\n                status: props.task.status,\r\n            })\r\n            console.log(211212)\r\n        } else if (!props.task) {\r\n            setJobs({\r\n                id: '',\r\n                name: '',\r\n                status: false,\r\n            })\r\n        }\r\n\r\n    }, [props.task]);\r\n\r\n\r\n    const onCloseForm = () => {\r\n        props.onSendCloseForm();\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        let target = event.target\r\n        let name = target.name\r\n        let value = target.value\r\n        if (name === 'status') {\r\n            value = target.value === 'true' ? true : false;\r\n        }\r\n\r\n        setJobs({ ...jobs, [name]: value })\r\n    }\r\n\r\n    const onHandleSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.onHandleSubmit(jobs);\r\n        onClear();\r\n        onCloseForm();\r\n    }\r\n\r\n    const onClear = () => {\r\n        setJobs({ name: '', status: '' })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"panel panel-warning\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                    <span\r\n                        className=\"fas fa-times-circle text-right\"\r\n                        onClick={onCloseForm}\r\n                    ></span>{jobs.id === '' ? 'Thêm Công Việc' : 'Cập Nhật Công Việc'}</h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                <form onSubmit={onHandleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Tên :</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name='name'\r\n                            value={jobs.name}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <label>Trạng Thái :</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        required=\"required\"\r\n                        name='status'\r\n                        value={jobs.status}\r\n                        onChange={onChange}\r\n                    >\r\n                        <option value={true}>Kích Hoạt</option>\r\n                        <option value={false}>Ẩn</option>\r\n                    </select>\r\n                    <br />\r\n                    <div className=\"text-center\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\">Thêm</button>&nbsp;\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={onClear}\r\n\r\n                        >Hủy Bỏ</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","import React, { useState } from 'react';\r\n\r\nfunction TaskSearch(props) {\r\n\r\n\r\n    const [keyword, setKeywords] = useState('')\r\n\r\n    const onChange=(e) => {\r\n        var target = e.target;\r\n        var value = target.value;\r\n        setKeywords(value)\r\n        // props.onSearch(keyword)\r\n    }\r\n\r\n    const onSearch=()=>{\r\n        props.onSearch(keyword)\r\n    }\r\n    return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nhập từ khóa...\"\r\n                    name=\"keyword\"\r\n                    value={keyword}\r\n                    onChange={onChange}\r\n\r\n                />\r\n                <span className=\"input-group-btn\">\r\n                    <button \r\n                    className=\"btn btn-primary\" \r\n                    type=\"button\"\r\n                    onClick={onSearch}\r\n                    \r\n                    >\r\n                        <span className=\"fa fa-search mr-5\"></span>Tìm\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskSearch;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction TaskSort(props) {\r\n\r\n    const [sort, setSort] = useState({\r\n        by: 'name',\r\n        value: 1\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     console.log('Prop Received: ', props);\r\n    // }, [props])\r\n\r\n\r\n    const onClickSort = (sortBy, sortValue) => {\r\n        setSort({\r\n            by: sortBy,\r\n            value: sortValue\r\n        })\r\n        props.onSort(sortBy,sortValue)\r\n    }\r\n    return (\r\n\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"dropdown\">\r\n                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                    Sắp Xếp <span className=\"fa fa-sort ml-5\"></span>\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li\r\n                        onClick={() => onClickSort('name', 1)}\r\n                    >\r\n                        <a href=\"/#\" role=\"button\"\r\n                            className={sort.by === 'name' & sort.value === 1 ? 'sort_selected' : ''}>\r\n                            <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                Tên A-Z\r\n                            </span>\r\n                        </a>\r\n                    </li>\r\n                    <li\r\n                        onClick={() => onClickSort('name', -1)}\r\n\r\n                    >\r\n                        <a href=\"/#\" role=\"button\"\r\n                            className={sort.by === 'name' & sort.value === -1 ? 'sort_selected' : ''}\r\n                        >\r\n\r\n                            <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                Tên Z-A\r\n                            </span>\r\n                        </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\"></li>\r\n                    <li\r\n                        onClick={() => onClickSort('status', 1)}\r\n                    >\r\n                        <a href=\"/#\" role=\"button\"\r\n                            className={sort.by === 'status' & sort.value === 1 ? 'sort_selected' : ''}\r\n                        >\r\n                            Trạng Thái Kích Hoạt</a>\r\n                    </li>\r\n                    <li\r\n                        onClick={() => onClickSort('status', -1)}\r\n                    >\r\n                        <a href=\"/#\" role=\"button\"\r\n                            className={sort.by === 'status' & sort.value === -1 ? 'sort_selected' : ''}\r\n                        >\r\n                            Trạng Thái Ẩn</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TaskSort;"," import React from 'react';\r\nimport TaskSearch from \"./TaskSearch\";\r\nimport TaskSort from \"./TaskSort\";\r\n\r\nfunction TaskForm(props) {\r\n\r\n    return (\r\n        <div className=\"row mt-15\">\r\n            {/* SEARCH */}\r\n           <TaskSearch onSearch={props.onSearch}/>\r\n            {/* SORT */}\r\n            <TaskSort onSort={props.onSort} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","\r\nfunction TaskItem(props) {\r\n\r\n    var { task, index } = props;// var task = props.task ; var index = props.index\r\n\r\n    const onUpdateStatus = () => {\r\n        props.onUpdateStatus(task.id)\r\n    }\r\n\r\n    const onDelete = () => {\r\n        props.onDelete(task.id)\r\n    }\r\n\r\n    const onUpdate= () => {\r\n        props.onUpdate(task.id)\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{index + 1}</td>\r\n            <td>{task.name}</td>\r\n            <td className=\"text-center\">\r\n                <span\r\n                    className={task.status === true ? 'label label-success' : 'label label-danger'}\r\n                    onClick={onUpdateStatus}>\r\n                    {task.status === true ? 'Kích Hoạt' : 'Ẩn'}\r\n                </span>\r\n            </td>\r\n            <td className=\"text-center\">\r\n                <button type=\"button\" className=\"btn btn-warning\" onClick={onUpdate}>\r\n                    <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n                </button>\r\n                &nbsp;\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={onDelete}>\r\n                    <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TaskItem;\r\n\r\n","import { useState } from 'react'\r\nimport TaskItem from './TaskItem';\r\n\r\nfunction TaskList(props) {\r\n\r\n\r\n    const [filter, setFilter] = useState(\r\n        {\r\n            filterName: '',\r\n            filterStatus: -1 //all:1, active:1, deactive:0\r\n        }\r\n    )\r\n\r\n\r\n    \r\n    const onChange=(e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        props.onFilter(\r\n            name==='filterName'?value:filter.filterName,\r\n            name==='filterStatus'?value:filter.filterStatus,\r\n        )\r\n        setFilter({ ...filter, [name]: value })\r\n    }\r\n\r\n    // if(filter){\r\n    //     if(filter.name){\r\n    //     console.log('ww')\r\n\r\n    //         props.tasks.filter((task)=>{\r\n                \r\n    //             console.log(task.name.toLowerCase().indexOf(filter.name))\r\n    //             return task.name.toLowerCase().indexOf(filter.name) !== -1\r\n    //         })\r\n            \r\n    //     }\r\n\r\n    // }\r\n\r\n\r\n    var elmTasks = props.tasks.map((task, index) => {\r\n        return <TaskItem\r\n            key={task.id}\r\n            index={index}\r\n            task={task}\r\n            onUpdateStatus={props.onUpdateStatus}\r\n            onDelete={props.onDelete}\r\n            onUpdate={props.onUpdate}\r\n        />\r\n    })\r\n    return (\r\n        <table className=\"table table-bordered table-hover mt-15\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"text-center\">STT</th>\r\n                    <th className=\"text-center\">Tên</th>\r\n                    <th className=\"text-center\">Trạng Thái</th>\r\n                    <th className=\"text-center\">Hành Động</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"filterName\"\r\n                            value={filter.filterName}\r\n                            onChange={onChange}\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"filterStatus\"\r\n                            value={filter.filterStatus}\r\n                            onChange={onChange}\r\n\r\n                        >\r\n                            <option value=\"-1\">Tất Cả</option>\r\n                            <option value=\"0\">Ẩn</option>\r\n                            <option value=\"1\">Kích Hoạt</option>\r\n                        </select>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n                {elmTasks}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n\n    const [tasks, setTask] = useState([])\n    const [taskedSearch, setTaskedSearch] = useState([])\n    const [isDisplayfrom, setIsDisplay] = useState(false)\n    const [taskEditing, setTaskEditing] = useState(null)\n    const [filter, setFilter] = useState(\n        {\n            name: '',\n            status: -1 //all:-1, active:1, deactive:0\n        }\n    )\n    const [keyword, setKeyword] = useState(null)\n    const [sort, setSort] = useState({\n        by: 'name',\n        value: 1\n    })\n\n\n    useEffect(() => {\n\n        if (localStorage && localStorage.getItem('tasks')) {\n           \n            var tasks = JSON.parse(localStorage.getItem('tasks'))\n            setTask(tasks);\n        } else {\n            alert('dasd')\n        }\n\n    }, []);\n\n\n    const onGenerateData = () => {\n        var def_tasks = [\n            {\n                id: guid(),\n                name: 'Học lập trình',\n                status: true,\n            },\n            {\n                id: guid(),\n                name: 'Đi bơi',\n                status: false,\n            },\n            {\n                id: guid(),\n                name: 'Ngủ',\n                status: true,\n            },\n        ]\n        setTask(def_tasks);\n\n        // localStorage.setItem('task',tasks)  \n        localStorage.setItem('tasks', JSON.stringify(def_tasks))\n    }\n\n\n    const s4 = () => {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    const guid = () => {\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n\n    const onToggleForm = () => {\n        if (isDisplayfrom && taskEditing !== null) {\n            setIsDisplay(true)\n            setTaskEditing(null)\n            console.log(taskEditing)\n        } else {\n            setIsDisplay(!isDisplayfrom)\n            setTaskEditing(null)\n        }\n    }\n\n    const onOpenForm = () => {\n        setIsDisplay(true)\n    }\n\n    const onCloseForm = () => {\n        setIsDisplay(false)\n    }\n\n    // Nhận dữ liệu tasks từ form và cập nhật, thêm cv\n    const onSubmit = (dataform) => {\n        let tasks_temp = [...tasks];\n        if (dataform.id === '') {\n            dataform.id = guid();\n            tasks_temp.push(dataform)\n        } else {\n            var index = findIndex(dataform.id)\n            tasks_temp[index] = dataform;\n        }\n        setTask(tasks_temp)\n        setTaskEditing(null)\n        localStorage.setItem('tasks', JSON.stringify(tasks_temp));\n    }\n\n\n    //Update Status\n    const onUpdateStatus = (id) => {\n        var index = findIndex(id);\n        if (index !== -1) {\n            var tasks_temp = [...tasks];\n            tasks_temp[index].status = !tasks_temp[index].status;\n            setTask(tasks_temp)\n            localStorage.setItem('tasks', JSON.stringify(tasks_temp))\n        }\n\n    }\n\n    //Tìm index cv theo id\n    const findIndex = (id) => {\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if (task.id === id) {\n                result = index;\n            }\n        })\n        return result;\n    }\n\n    //Xóa công việc\n    const onDelete = (id) => {\n        var index = findIndex(id);\n        if (index !== -1) {\n            var tasks_temp = [...tasks];\n            tasks_temp.splice(index, 1);\n            setTask(tasks_temp)\n            localStorage.setItem('tasks', JSON.stringify(tasks_temp))\n        }\n        onCloseForm();\n    }\n\n    //Cập Nhật Công Việc\n    const onUpdate = (id) => {\n        var index = findIndex(id);\n        if (index !== -1) {\n            setTaskEditing(tasks[index])\n        }\n        onOpenForm()\n    }\n\n    //filter task\n    const onFilter = (filterName, filterStatus) => {\n        filterStatus = parseInt(filterStatus, 10)\n        setFilter({\n            name: filterName.toLowerCase(),\n            status: filterStatus\n        });\n    }\n\n\n    useEffect(() => {\n        let yyy = [...tasks]\n        if (filter) {\n            if (filter.name) {\n                yyy = yyy.filter((task) => {\n                    return task.name.toLowerCase().indexOf(filter.name) !== -1\n                })\n            }\n            yyy = yyy.filter((task) => {\n                if (filter.status === -1) {\n                    return task;\n                } else {\n                    return task.status === (filter.status === 1 ? true : false)\n                }\n            })\n\n        }\n        if (keyword) {\n        console.log('co ')\n\n            yyy = yyy.filter((task) => {\n                return task.name.toLowerCase().indexOf(keyword) !== -1\n            })\n        }\n        console.log(yyy)\n        setTaskedSearch(yyy)\n    }, [filter, tasks, keyword])\n\n    if(sort.by==='name') {\n        tasks.sort((a,b) =>{\n            if(a.name>b.name) return sort.value;\n            else if(a.name<b.name) return -sort.value;\n            else return 0;\n        })\n    }else{\n        tasks.sort((a,b) =>{\n            if(a.status>b.status) return -sort.value;\n            else if(a.status<b.status) return sort.value;\n            else return 0;\n        })\n    }\n    console.log('render')\n    const onSearch = (keyword) => {\n        console.log(keyword)\n        setKeyword(keyword)\n    }\n\n\n    function isEqual(objA, objB) {\n        // Tạo các mảng chứa tên các property\n        var aProps = Object.getOwnPropertyNames(objA);\n        var bProps = Object.getOwnPropertyNames(objB);\n        // Nếu độ dài của mảng không bằng nhau,\n        // thì 2 objects đó không bằnh nhau.\n        if (aProps.length !== bProps.length) {\n            return false;\n        }\n\n        for (var i = 0; i < aProps.length; i++) {\n            var propName = aProps[i];\n            // Nếu giá trị của cùng một property mà không bằng nhau,\n            // thì 2 objects không bằng nhau.\n            if (objA[propName] !== objB[propName]) {\n                return false;\n            }\n        }\n        // Nếu code chạy đến đây,\n        // tức là 2 objects được tính lằ bằng nhau.\n        return true;\n    }\n\n    // SORT\n    const onSort = (sortBy, sortValue) => {\n        console.log(sortBy, sortValue);\n        setSort({\n            by: sortBy,\n            value: sortValue\n        })\n    }\n\n    /////////////////////////////////\n    //Đóng, mở TaskForm \n    var elmTasksForm = isDisplayfrom\n        ? <TaskForm\n            onHandleSubmit={onSubmit}\n            onSendCloseForm={onCloseForm}\n            task={taskEditing} />\n        : '';\n    return (\n\n\n        <div className=\"container\">\n            <div className=\"text-center\">\n                <h1>Quản Lý Công Việc</h1>\n                <hr />\n            </div>\n            <div className=\"row\">\n                <div className={isDisplayfrom === true ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n                    {/* FORM */}\n                    {elmTasksForm}\n                </div>\n                <div className={isDisplayfrom === true ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={onToggleForm}\n                    >\n                        <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n                    </button>&nbsp;\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-danger\"\n                        onClick={onGenerateData}>\n                        Generate Data\n                    </button>\n                    {/* SEARCH-SORT */}\n                    <TaskControl onSearch={onSearch} onSort={onSort}  />\n                    {/* LIST */}\n                    <div className=\"row mt-15\">\n                        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                            <TaskList tasks={!isEqual(filter, { name: \"\", status: -1 })||keyword!==null ? taskedSearch:tasks} onUpdateStatus={onUpdateStatus} onDelete={onDelete} onUpdate={onUpdate} onFilter={onFilter} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}